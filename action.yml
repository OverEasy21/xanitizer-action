name: 'Xanitizer Security Analysis'
description: 'GitHub action to download and install Xanitizer, and to run a Xanitizer security analysis in a GitHub workflow.'
author: 'RIGS IT GmbH'
inputs:

  ###########################################################################
  # BASIC SETTINGS
  ###########################################################################

  # License settings
  license:
    description: 'String which is used as input for a Xanitizer license file.
      Note: It is recommended to use a GitHub secret to store the license file content like XANITIZER_LICENSE
            and access the content in the configuration via the GitHub secret parameter.
            Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.
      Note: If the license is a floating license and a proxy server is used to access the license server, please specify the proxy server settings.
            If no settings are specified, the settings from the Xanitizer properties file will be used.'
    required: false
  licenseServerRetryCount:
    description: 'Number of attempts to get a license token from the license server.
      Note: If the used Xanitizer license is a machine bound license, this parameter will be ignored.
            If the used Xanitizer license is a floating license it may happen
            that all tokens are in use or the connection to the license server is not available at startup.
            In such cases, no license token can be requested successfully from the license server to start Xanitizer
            and the headless process would terminate with a license error.
            When this parameter is set to a value greater than zero,
            Xanitizer attempts every minute to request a license token until the specified count has been reached.
            Setting this parameter to zero disables the repetition.'
    required: false

  # Workspace settings
  checkoutPath:
    description: 'Relative path under $GITHUB_WORKSPACE where the project was checked out.
      Note: Please use the same value as for parameter `path` of the configured actions/checkout action
            (see https://github.com/actions/checkout#usage parameter `path`).'
    required: false

  # Report settings
  #
  # Note: The result of an HTML report is not only one file, it`s several files.
  overviewReportOutputFile:
    description: 'The output location of the overview report.
                  This has to be either a list of files or the parameter has to be undefined or empty if no overview reports should be written.
                  Allowed file extensions are: pdf, html, docx.'
    required: false
  overviewReportOutputFiles:
    description: 'Comma separated list of output locations of the overview reports.
                  This has to be either a list of files or the parameter has to be undefined or empty if no overview reports should be written.
                  Allowed file extensions are: pdf, html, docx.'
    required: false
  findingsListReportOutputFile:
    description: 'The output location of the findings list report.
                  This has to be either a list of files or the parameter has to be undefined or empty if no findings list reports should be written.
                  Allowed file extensions are: pdf, html, docx, xml, csv, sarif.'
    required: false
  findingsListReportOutputFiles:
    description: 'Comma separated list of output locations of the findings list reports.
                  This has to be either a list of files or the parameter has to be undefined or empty if no findings list reports should be written.
                  Allowed file extensions are: pdf, html, docx, xml, csv, sarif.
      Note: If no report file has been secified, i.e., neither an overview report nor a findings list report,
            both a Xanitizer-Findings-List.pdf and a Xanitizer-Findings-List.sarif report will be generated in the checkout directory
            specified by $GITHUB_WORKSPACE with the optional relative parameter `checkoutPath` as default.'
    required: false
  onlyProblemsInFindingsListReport:
    description: 'Boolean flag specifying if only findings with problem classifications are written to the findings list report.'
    required: false
    default: 'true'
  generateDetailsInFindingsListReport:
    description: 'Boolean flag specifying if all the details of a finding are written to the findings list report, e.g. if the output contains all steps of a path.
      Note: Only relevant if the file extension of the parameter `findingsListReportOutputFile` is xml, html, or sarif.'
    required: false
    default: 'true'

  # Configuration file settings
  configFile:
    description: 'The path to the Xanitizer configuration file of the project that should be analyzed.
                  Either this parameter or the parameter `rootDirectory` may be specified, but not both.
      Note: If neither the parameter `configFile` nor the parameter `rootDirectory` has been specified,
            the parameter `rootDirectory` is set to the checkout directory specified by $GITHUB_WORKSPACE
            with the optional relative parameter `checkoutPath`.'
    required: false
  rootDirectory:
    description: 'The root directory, to be used for default set-ups.
                  Either this parameter or the parameter `configFile` may be specified, but not both.
      Note: If neither the parameter `configFile` nor the parameter `rootDirectory` has been specified,
            the parameter `rootDirectory` is set to the checkout directory specified by $GITHUB_WORKSPACE
            with the optional relative parameter `checkoutPath`.'
    required: false
  projectName:
    description: 'The project name that should be used.
                  Only relevant if the parameter `rootDirectory` is specified.
                  If not given, the simple name of the root directory is used.'
    required: false
  configFileDirectory:
    description: 'The directory where to put the generated configuration file.
                  Only relevant if the parameter `rootDirectory` is specified.
                  If not given, the configuration file is generated in the `rootDirectory`.'
    required: false
  overwriteConfigFile:
    description: 'Boolean flag specifying if an existing config file is to be overwritten.
                  Only relevant if the parameter `rootDirectory` is specified.'
    required: false

  # Security analysis settings
  compileToJavaScript:
    description: 'Boolean flag specifying whether Xanitizer uses NodeJS to compile Angular and TypeScript projects to JavaScript code itself or not.
                  This could be a potential risk if someone has manipulated the external ng or the tsc script.
                  If the code is already compiled to JavaScript, best with a source map, this option can be set to `false`
                     true - enables the compilation of Angular and TypeScript code to JavaScript by Xanitizer itself
                     false - disables the compilation of Angular and TypeScript code to JavaScript by Xanitizer itself
                             and some Xanitizer workspace information will be generated if Angular or Typescript files are found in the project
                     not set - if this option is not set and Angular or Typescript files are found in the project,
                               a Xanitizer workspace error will be generated
'
    required: false
    default: 'true'
  performNodeAudit:
    description: 'Boolean flag specifying if npm audit should be executed.
                  The npm audit APIs can be used to report on known vulnerable node.js libraries.
                  This requires an Internet connection and so has to be allowed explicitly.
                  This is only relevant for NodeJS projects.'
    required: false
    default: 'true'
  haltOnMissingSearchPaths:
    description: 'Boolean flag specifying whether the task should fail if there are search paths configured that do not exist.'
    required: false
  haltOnIssues:
    description: 'A comma - separated list of issue groups that will let the task fail if for any of them, a Xanitizer error issue occurs.
                  Possible values are ALL_ERRORS, WORKSPACE_ERRORS, CALL_GRAPH_ERRORS, ANALYSIS_ERRORS, MIGRATION_ERRORS.
                  If the value is not set, this means that issues are not relevant for the success of the task.'
    required: false
  haltOnFindings:
    description: 'Boolean flag specifying whether the task should fail if there are findings
                  with a rating equal or higher than the value defined for `findingsRatingThreshold`.'
    required: false
  findingsRatingThreshold:
    description: 'A rating value. Only used if the parameter `haltOnFindings` is set.'
    required: false

  # Settings for updating OWASP Dependency-Check repository
  updateOwaspDependencyCheckRepository:
    description: 'Boolean flag specifying whether the OWASP Dependency Check repository should be updated or not.
      Note: The OWASP Dependency Check is based on vulnerability data stored in a local repository.
            It is recommended to update the local OWASP Dependency Check repository on a regular basis
            via remote access to the National Vulnerability Database (NIST).
            If a proxy server is used to access the internet, please specify the proxy server settings
            otherwise the settings from the Xanitizer properties file will be used.'
    required: false

  # Loglevel settings
  logLevel:
    description: 'The logging level to be used when running Xanitizer.
                   Values: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.'
    required: false

  ###########################################################################
  # ADVANCED SETTINGS
  #
  # Supported by Xanitizer but normally not necessary for the GitHub integration
  ###########################################################################

  # Configuration file settings
  projectDataDirectory:
    description: 'Xanitizer`s project data directory, if it is not the default one in <HOME>/.Xanitizer.'
    required: false

  # Security analysis settings
  haltOnNewFindings:
    description: 'Boolean flag specifying whether the task should fail if there are * NEW * findings
                  with a rating equal or higher than the value defined for `newFindingsRating`.'
    required: false
  newFindingsRatingThreshold:
    description: 'A rating value. Only used if the parameter `haltOnNewFindings` is set.'
    required: false

  # Maven repository
  mavenRepository:
    description: 'Optional path to the local Maven repository.
      Note: If no settings are specified, the settings from the Xanitizer properties file will be used.'
    required: false

  # Create snapshot settings
  createSnapshot:
    description: 'Boolean flag specifying whether a snapshot should be created after parsing and analyzing the current version or not.'
    required: false
  snapshotComment:
    description: 'Optional comment added to the newly created snapshot.
                  Only relevant if the parameter `createSnapshot` is true.'
    required: false

  # Export project settings
  exportDirectory:
    description: 'The output directory of the project export.
      Note: If the parameter is undefined or an empty string, the project is not exported.'
    required: false
  exportSnapshots:
    description: 'Boolean flag specifying if snapshots should be exported or not.
                  The parameter is only used if an export directory is set.
                  If the parameter is not set or empty, no snapshots are exported.'
    required: false
  exportPassphrase:
    description: 'The passphrase for the project export.
                  The parameter is only used if an export directory is set.
                  If the parameter is not set or empty, the exported project is not encrypted.
      Note: It is recommended to use a GitHub secret to store the export like XANITIZER_EXPORT_PASSPHRASE
            and access the content in the configuration via the GitHub secret parameter.
            Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.'
    required: false

  # Merge project settings
  mergedProject:
    description: 'The path to an exported Xanitizer project archive file.
                  If specified, this project is merged into the current project.
                  This means that all more recent user adaptations, findings and issues are migrated into the current project.'
    required: false
  importPassphrase:
    description: 'The passphrase for the merged project.
                  The parameter is only necessary if the parameter `mergedProject` is set and the merged project is encrypted.
      Note: It is recommended to use a GitHub secret to store the export passphrase like XANITIZER_EXPORT_PASSPHRASE.
            and access the content in the configuration via the GitHub secret parameter.
            Please see https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets for details.'
    required: false

  # Proxy settings
  proxyServer:
    description: 'Optional proxy server to access the internet to update the OWASP Dependency Check repository
                  or to request a license token from the public license server in case of a floating license via a proxy.
      Note: If no settings are specified, the settings from the Xanitizer properties file will be used.'
    required: false
  proxyPort:
    description: 'Optional proxy server port.'
    required: false
  proxyUser:
    description: 'Optional proxy server user name.'
    required: false
  proxyPassword:
    description: 'Optional proxy server user password.'
    required: false

outputs:
  security_analysis:
    description: 'Status messages of the result of the security analysis.
                  See src/headless-util/heasless-property.ts and src/commands/abstract-cmd.ts method processOutput() for details.'

runs:
  using: 'node12'
  main: 'dist/index.js'

branding:
  icon: alert-triangle
  color: red
